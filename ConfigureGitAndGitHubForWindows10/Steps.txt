GitHub is the centralized repository and Git is the software versioning control system that allows us to create a local repository. Multiple branches can also be created from that local repository.

1. In your GitHub Profile: Create a new project. In my case, i have creaded a project called 'GitAndGitHub'. I have also added a 'README.md' file to that project.

2. In your Windows system: Download and install Git. I have downloaded Git from the below link:
https://git-scm.com/download/win

3. In your Windows system: Create a new directory. This directory will serve as the local repository. In my case, I have created a directory called 'GitAndGitHub' in the 'Documents' folder. Note that this directory can be created anywhere.

4. In your Windows system: Inside the directory, right click and select the 'Git Bash Here' option. This will open a Git Bash terminal (also known as the Git bash emulator). Ensure that the current working directory in the Git bash emulator is the newly created directory (the local repository). 

5. In your Windows system: In the emulator, type the command 'git init'. The response is shown below. As shown in the message, a new folder called '.git' will be created which contains all the metadata for the new repository. This folder is a hidden folder. With this command, an empty Git repository is created.

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub
$ git init
Initialized empty Git repository in C:/Users/indranid/Documents/GitAndGitHub/.git/

6. In your GitHub Profile: Next, we need to link the empty repository in the windows system to one of the projects in GitHub. For this, go to the newly created project in GitHub. Click on the 'Clone or download' button and copy the HTTPS web url.

7. In your Windows system: Type the following command in the emulator:
 git remote add origin "<HTTPS URL of the GitHub Project>"

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub (master)
$ git remote add origin "https://github.com/indro8307/GitAndGitHub.git"

8. In your Windows system: In the emulator, fire the pull request. This will fetch the project from the centralized repository i.e. GitHub to the local repository.

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub (master)
$ git pull origin master
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 641 bytes | 19.00 KiB/s, done.
From https://github.com/indro8307/GitAndGitHub
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> origin/master


9. In your Windows system: Now that the project has been 'pulled' to your local repository, create some new folders and files. In my case i have created a new directory called 'ConfigureGitAndGitHubForWindows10' and a new file called 'Steps.txt' inside it.

10. In your Windows system: type the command 'git status' to see all the tracked and untracked file.

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ConfigureGitAndGitHubForWindows10/

nothing added to commit but untracked files present (use "git add" to track)

11. In your Windows system: if you have created a new file or a folder, it will be shown as an 'untracked' file. You have to use the command 'git add' to make the file a tracked file.

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub (master)
$ git add ConfigureGitAndGitHubForWindows10
indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   ConfigureGitAndGitHubForWindows10/Steps.txt


11. In your Windows system: Use the command 'git commit' to commit the changes in the local repository. 'Commiting' changes means recording snapshot of the repository at a given time.

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub/ConfigureGitAndGitHubForWindows10 (master)
$ git commit -m "this is commit 1"
[master 456a143] this is commit 1
 Committer: Das <indranil.das@xxxxx.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 40 insertions(+)
 create mode 100644 ConfigureGitAndGitHubForWindows10/Steps.txt


12. In your Windows system: In order to push the change back to GitHub i.e. the central repository, you need to create a ssh key using the ssh-keygen command.

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub/ConfigureGitAndGitHubForWindows10 (master)
$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/xxxxx/.ssh/id_rsa):
Created directory '/c/Users/xxxxx/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/xxxxx/.ssh/id_rsa
Your public key has been saved in /c/Users/xxxxx/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:V8FP9v98oNSHHRTSQyJDNTjXyl6VNnkgFY0iyBBB2R0 indranid@N-CNU416B8WC
The key's randomart image is:
+---[RSA 3072]----+
|     .=B oE*=*BB+|
|      . + oo=+BX+|
|           .==+.=|
|           . o.o.|
|        S . ...oo|
|         .  ..+ +|
|           . . +.|
|            .   +|
|                .|
+----[SHA256]-----+


13. In your GitHub Profile: Now add the ssh key in '/c/Users/xxxxx/.ssh/id_rsa.pub'  to your GitHub profile:
   Settings -> SSH and GPG keys -> New SSH key 

14. In your Windows system: You need to authentication for the GitHub profile using the below command:
ssh -T git@github.com

indranid@N-CNU416B8WC MINGW32 ~/Documents/GitAndGitHub/ConfigureGitAndGitHubForWindows10 (master)
$ ssh -T git@github.com
The authenticity of host 'github.com (x.x.x.x)' can't be established.
RSA key fingerprint is SHA256:xyzfhgugjkbk.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'github.com,x.x.x.x' (RSA) to the list of known hosts.
Hi indro8307! You've successfully authenticated, but GitHub does not provide shell access.


15. In your Windows system: push the changes in the local repository to the central repository i.e. GitHub
    git push origin master
